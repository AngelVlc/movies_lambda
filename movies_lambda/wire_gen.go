// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/google/wire"
	"os"
)

// Injectors from wire.go:

func initDynamoDbSearcher() Searcher {
	dynamoDbSearcher := NewDynamoDbSearcher()
	return dynamoDbSearcher
}

func initMockedSearcher() Searcher {
	mockedSearcher := NewMockedSearcher()
	return mockedSearcher
}

func initAwsDynamoDbApi() DynamoDbApi {
	awsDynamoDbApi := NewAwsDynamoDbApi()
	return awsDynamoDbApi
}

func initMockedDybamoDbApi() DynamoDbApi {
	mockedDynamoDbApi := NewMockedDynamoDbApi()
	return mockedDynamoDbApi
}

// wire.go:

func InitSearcher() Searcher {
	if inTestingMode() {
		return initMockedSearcher()
	} else {
		return initDynamoDbSearcher()
	}
}

func InitDynamoDbApi() DynamoDbApi {
	if inTestingMode() {
		return initMockedDybamoDbApi()
	} else {
		return initAwsDynamoDbApi()
	}
}

func inTestingMode() bool {
	return len(os.Getenv("TESTING")) > 0
}

var DynamoDbSearcherSet = wire.NewSet(
	NewDynamoDbSearcher, wire.Bind(new(Searcher), new(*DynamoDbSearcher)),
)

var MockedSearcherSet = wire.NewSet(
	NewMockedSearcher, wire.Bind(new(Searcher), new(*MockedSearcher)),
)

var AwsDynamoDbApiSet = wire.NewSet(
	NewAwsDynamoDbApi, wire.Bind(new(DynamoDbApi), new(*AwsDynamoDbApi)),
)

var MockedDynamoDbApiSet = wire.NewSet(
	NewMockedDynamoDbApi, wire.Bind(new(DynamoDbApi), new(*MockedDynamoDbApi)),
)
